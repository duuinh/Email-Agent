name: Build and deploy dotnet core app to Azure Function App

on:
  push:
    branches:
      - master
  workflow_dispatch:

env:
  AZURE_FUNCTIONAPP_NAME: 'service-request-handling-agent'    # set this to your function app name on Azure
  AZURE_FUNCTIONAPP_PACKAGE_PATH: '.'                         # set this to the path to your function app project, defaults to the repository root
  DOTNET_VERSION: '8.0.x'                                     # set this to the dotnet version to use (e.g. '2.1.x', '3.1.x', '5.0.x')

jobs:
  build-and-deploy:
    runs-on: windows-latest
    permissions:
      id-token: write #This is required for requesting the JWT
      contents: read #This is required for actions/checkout
      
    steps:
    - name: 'Checkout GitHub Action'
      uses: actions/checkout@v3

    - name: Setup DotNet ${{ env.DOTNET_VERSION }} Environment
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
  
    - name: 'Resolve Project Dependencies Using Dotnet'
      shell: pwsh
      run: |
        pushd './${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}'
        
        $pem = @"
        ${{ secrets.GH_APP_PEM }}
        "@ -replace '\\n', "`n"
            $pem | Out-File -FilePath github-app.pem -Encoding ascii

        dotnet build --configuration Release --output ./output
        popd

    - name: Login to Azure
      uses: azure/login@v2
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID  }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID  }}
    
    - name: 'Run Azure Functions Action'
      uses: Azure/functions-action@v1
      id: fa
      with:
        app-name: ${{ env.AZURE_FUNCTIONAPP_NAME }}
        slot-name: 'Production'
        package: '${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}/output'